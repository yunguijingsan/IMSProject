<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shine.dao.ims.CazeDao" >
  <resultMap id="BaseResultMap" type="com.shine.entity.ims.Caze" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="expectation" property="expectation" jdbcType="VARCHAR" />
    <result column="result" property="result" jdbcType="VARCHAR" />
    <result column="params" property="params" jdbcType="VARCHAR" />
    <result column="urlId" property="urlId"  jdbcType="BIGINT"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id,name,description,expectation,result,params,urlId
  </sql>
  
  <insert id="addCaze"   useGeneratedKeys="true" keyProperty="id" parameterType="com.shine.entity.ims.Caze" >
    insert into caze(name,description,expectation,result,params,urlId)values
    (#{name,jdbcType=VARCHAR},#{description,jdbcType=VARCHAR},#{expectation,jdbcType=VARCHAR},#{result,jdbcType=VARCHAR},#{params,jdbcType=VARCHAR},#{urlId,jdbcType=BIGINT})
  </insert>
  <update id="updateCaze" parameterType="com.shine.entity.ims.Caze" >
    update caze
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="expectation != null" >
        expectation = #{expectation,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        result = #{result,jdbcType=VARCHAR},
      </if>
      <if test="params != null" >
        params = #{params,jdbcType=VARCHAR},
      </if>
      <if test="urlId != null" >
        urlId = #{urlId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
   <delete id="deleteCaze">
  	 DELETE FROM caze WHERE id in
  	 <foreach collection="array" item="item" index="index" open="(" separator="," close=")">
  	 	#{item}
  	 </foreach>
  	</delete>
  	 
  <select id="findCazeById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select * from caze where id=#{id}
  </select>
  
  <sql id="whereStatement">
  	<where>
  		   1=1
    	<if test="name!=null and name!='' ">
    		and name like CONCAT('%','${name}','%')
    	</if>
    	<if test="expectation!=null and  expectation!='' ">
    		and expectation like CONCAT('%', '${expectation}','%')
    	</if>
    	<if test="result!=null and  result!='' ">
    		and result like CONCAT('%','${result}','%')
    	</if>
    	<if test="params!=null and  params!='' ">
    		and params like CONCAT('%','${params}','%')
    	</if>
    	<if test="urlId!=null and urlId > 0 ">
    		and urlId = #{urlId}
    	</if>
  	</where>
  </sql>
  
  <select id="searchCaze" resultType="com.shine.entity.ims.Caze" parameterType="com.shine.condition.ims.CazeCondition">
    select a.* from (select 
    <include refid="Base_Column_List" />
    from caze
    <include refid="whereStatement" />
    ) a
  </select>
	
	 
</mapper>